
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA END RECORD SCALAR SEMICOLON SIGN TERM TIPE TYPE VARSstr : TYPE Lstr VAR RstrLstr :  Tstr SEMICOLON\n            |  Tstr SEMICOLON LstrTstr : TIPE SIGN SCALAR\n            | TIPE SIGN DstrRstr : Vstr SEMICOLON\n            | Vstr SEMICOLON RstrVstr   : Kstr COLON TIPE\n              | Kstr COLON SCALAR\n              | Kstr COLON DstrKstr  : TERM\n             | Kstr COMMA TERMDstr  : RECORD Fstr ENDFstr  : Estr SEMICOLON\n             | Fstr Estr SEMICOLONEstr  : Kstr COLON SCALAR\n             | Kstr COLON TIPE'
    
_lr_action_items = {'TYPE':([0,],[2,]),'$end':([1,9,17,23,],[0,-1,-6,-7,]),'TIPE':([2,7,18,31,],[5,5,24,34,]),'VAR':([3,7,13,],[6,-2,-3,]),'SEMICOLON':([4,10,14,15,21,24,25,26,28,29,33,34,],[7,17,-4,-5,30,-8,-9,-10,-13,32,-16,-17,]),'SIGN':([5,],[8,]),'TERM':([6,16,17,19,20,30,32,],[12,12,12,27,12,-14,-15,]),'SCALAR':([8,18,31,],[14,25,33,]),'RECORD':([8,18,],[16,16,]),'COLON':([11,12,22,27,],[18,-11,31,-12,]),'COMMA':([11,12,22,27,],[19,-11,19,-12,]),'END':([20,30,32,],[28,-14,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Sstr':([0,],[1,]),'Lstr':([2,7,],[3,13,]),'Tstr':([2,7,],[4,4,]),'Rstr':([6,17,],[9,23,]),'Vstr':([6,17,],[10,10,]),'Kstr':([6,16,17,20,],[11,22,11,22,]),'Dstr':([8,18,],[15,26,]),'Fstr':([16,],[20,]),'Estr':([16,20,],[21,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Sstr","S'",1,None,None,None),
  ('Sstr -> TYPE Lstr VAR Rstr','Sstr',4,'p_Sstr','tree.py',23),
  ('Lstr -> Tstr SEMICOLON','Lstr',2,'p_Lstr','tree.py',56),
  ('Lstr -> Tstr SEMICOLON Lstr','Lstr',3,'p_Lstr','tree.py',57),
  ('Tstr -> TIPE SIGN SCALAR','Tstr',3,'p_Tstr','tree.py',66),
  ('Tstr -> TIPE SIGN Dstr','Tstr',3,'p_Tstr','tree.py',67),
  ('Rstr -> Vstr SEMICOLON','Rstr',2,'p_Rstr','tree.py',73),
  ('Rstr -> Vstr SEMICOLON Rstr','Rstr',3,'p_Rstr','tree.py',74),
  ('Vstr -> Kstr COLON TIPE','Vstr',3,'p_Vstr','tree.py',83),
  ('Vstr -> Kstr COLON SCALAR','Vstr',3,'p_Vstr','tree.py',84),
  ('Vstr -> Kstr COLON Dstr','Vstr',3,'p_Vstr','tree.py',85),
  ('Kstr -> TERM','Kstr',1,'p_Kstr','tree.py',94),
  ('Kstr -> Kstr COMMA TERM','Kstr',3,'p_Kstr','tree.py',95),
  ('Dstr -> RECORD Fstr END','Dstr',3,'p_Dstr','tree.py',104),
  ('Fstr -> Estr SEMICOLON','Fstr',2,'p_Fstr','tree.py',115),
  ('Fstr -> Fstr Estr SEMICOLON','Fstr',3,'p_Fstr','tree.py',116),
  ('Estr -> Kstr COLON SCALAR','Estr',3,'p_Estr','tree.py',125),
  ('Estr -> Kstr COLON TIPE','Estr',3,'p_Estr','tree.py',126),
]
